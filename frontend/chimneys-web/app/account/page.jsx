'use client';

import { useState, useEffect } from 'react';
import { useSelector } from 'react-redux';
import Link from 'next/link';
import './style.css';

export default function AccountPage() {
    const user = useSelector(state => state.user.user);
    const [isEditing, setIsEditing] = useState(false);
    const [formData, setFormData] = useState({
        name: '',
        surname: '',
        email: '',
        phone: '',
        address: ''
    });

    useEffect(() => {
        if (user) {
            setFormData({
                name: user.name || '',
                surname: user.surname || '',
                email: user.email || '',
                phone: user.phone || '',
                address: user.address || ''
            });
        }
    }, [user]);

    const handleInputChange = (e) => {
        const { name, value } = e.target;
        setFormData(prev => ({
            ...prev,
            [name]: value
        }));
    };

    const handleSave = async () => {
        try {
            const token = localStorage.getItem('token');
            const response = await fetch('http://localhost:5501/user/update-profile', {
                method: 'PUT',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': `Bearer ${token}`
                },
                body: JSON.stringify(formData)
            });

            if (response.ok) {
                alert('–ü—Ä–æ—Ñ—ñ–ª—å —É—Å–ø—ñ—à–Ω–æ –æ–Ω–æ–≤–ª–µ–Ω–æ!');
                setIsEditing(false);
            } else {
                const error = await response.json();
                alert(error.message || '–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é');
            }
        } catch (error) {
            console.error('Error updating profile:', error);
            alert('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø—Ä–æ—Ñ—ñ–ª—é');
        }
    };

    const handleCancel = () => {
        if (user) {
            setFormData({
                name: user.name || '',
                surname: user.surname || '',
                email: user.email || '',
                phone: user.phone || '',
                address: user.address || ''
            });
        }
        setIsEditing(false);
    };

    if (!user) {
        return (
            <div className="account-container">
                <div className="account-content">
                    <h1>–ú—ñ–π –∞–∫–∞—É–Ω—Ç</h1>
                    <p>–ë—É–¥—å –ª–∞—Å–∫–∞, —É–≤—ñ–π–¥—ñ—Ç—å –≤ —Å–∏—Å—Ç–µ–º—É –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤–∞—à–æ–≥–æ –ø—Ä–æ—Ñ—ñ–ª—é.</p>
                </div>
            </div>
        );
    }

    return (
        <div className="account-container">
            <div className="account-content">
                <div className="account-header">
                    <h1>–ú—ñ–π –∞–∫–∞—É–Ω—Ç</h1>
                </div>

                <div className="account-info">
                    <div className="info-section">
                        <h2>–û—Å–æ–±–∏—Å—Ç–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è</h2>
                        <div className="form-group">
                            <label>–Ü–º'—è:</label>
                            {isEditing ? (
                                <input
                                    type="text"
                                    name="name"
                                    value={formData.name}
                                    onChange={handleInputChange}
                                    className="form-input"
                                />
                            ) : (
                                <span className="info-value">{user.name || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</span>
                            )}
                        </div>

                        <div className="form-group">
                            <label>–ü—Ä—ñ–∑–≤–∏—â–µ:</label>
                            {isEditing ? (
                                <input
                                    type="text"
                                    name="surname"
                                    value={formData.surname}
                                    onChange={handleInputChange}
                                    className="form-input"
                                />
                            ) : (
                                <span className="info-value">{user.surname || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</span>
                            )}
                        </div>

                        <div className="form-group">
                            <label>Email:</label>
                            {isEditing ? (
                                <input
                                    type="email"
                                    name="email"
                                    value={formData.email}
                                    onChange={handleInputChange}
                                    className="form-input"
                                />
                            ) : (
                                <span className="info-value">{user.email}</span>
                            )}
                        </div>

                        <div className="form-group">
                            <label>–¢–µ–ª–µ—Ñ–æ–Ω:</label>
                            {isEditing ? (
                                <input
                                    type="tel"
                                    name="phone"
                                    value={formData.phone}
                                    onChange={handleInputChange}
                                    className="form-input"
                                    placeholder="+380"
                                />
                            ) : (
                                <span className="info-value">{user.phone || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</span>
                            )}
                        </div>

                        <div className="form-group">
                            <label>–ê–¥—Ä–µ—Å–∞:</label>
                            {isEditing ? (
                                <textarea
                                    name="address"
                                    value={formData.address}
                                    onChange={handleInputChange}
                                    className="form-input"
                                    rows="3"
                                    placeholder="–í–≤–µ–¥—ñ—Ç—å –≤–∞—à—É –∞–¥—Ä–µ—Å—É"
                                />
                            ) : (
                                <span className="info-value">{user.address || '–ù–µ –≤–∫–∞–∑–∞–Ω–æ'}</span>
                            )}
                        </div>
                    </div>

                    <div className="account-links">
                        <h2>–®–≤–∏–¥–∫—ñ –ø–æ—Å–∏–ª–∞–Ω–Ω—è</h2>
                        <div className="links-grid">
                            <Link href="/my-orders" className="account-link">
                                <div className="link-card">
                                    <div className="link-icon">üì¶</div>
                                    <div className="link-content">
                                        <h3>–ú–æ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è</h3>
                                        <p>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —ñ—Å—Ç–æ—Ä—ñ—é –∑–∞–º–æ–≤–ª–µ–Ω—å</p>
                                    </div>
                                </div>
                            </Link>

                            <Link href="/favorites" className="account-link">
                                <div className="link-card">
                                    <div className="link-icon">‚ù§Ô∏è</div>
                                    <div className="link-content">
                                        <h3>–û–±—Ä–∞–Ω–µ</h3>
                                        <p>–ó–±–µ—Ä–µ–∂–µ–Ω—ñ —Ç–æ–≤–∞—Ä–∏</p>
                                    </div>
                                </div>
                            </Link>

                            <Link href="/cart" className="account-link">
                                <div className="link-card">
                                    <div className="link-icon">üõí</div>
                                    <div className="link-content">
                                        <h3>–ö–æ—à–∏–∫</h3>
                                        <p>–ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –∫–æ—à–∏–∫</p>
                                    </div>
                                </div>
                            </Link>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
}
